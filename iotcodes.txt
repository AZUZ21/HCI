NEWS PARSER

<!DOCTYPE html>
<html>
<head>
<h1 style="background-color:Tomato;font-family:century gothic">News Reader</h1>
</head>
<body>
<p style="background-color:Tomato;">
<OL>
<LI> Enter your Name.
<LI> Enter Phone number and Email.
</OL>
<h4>
<a href="https://feeds.feedburner.com/ndtvsports-latest"> NDTV</a>
<a href="https://www.thehindu.com/business/Economy/feeder/default.rss"> The Hindu</a>
<a href="https://www.indiatoday.in/rss/1206504"> India Today</a>
</h4>
<form method="post" action="/{{url}}">
<label for="name">Name:</label><br>
<input type="text" id="fname" name="fname"><br><br>
<label for="reg">Phone no:</label><br>
<input type="text" id="reg" name="reg" ><br><br>
<label for="topic">Email:</label><br>
<input type="text" id="email" name="email" ><br><br>
<input type="submit" value="Submit">
<input type="reset" value="Reset" >
</form>
</body>
</html>

============================================================

DHT AND GAS ESP CODE

#include <DHT.h>
#include <ThingSpeak.h>
#include "MQ135.h"
#include <WiFi.h>
const char *ssid = "……..";
const char *pass = "……………";
DHT dht(27, DHT11);
WiFiClient client;
long myChannelNumber = 2414352;
const char myWriteAPIKey[] = "3Y6QIEHML3RU4FFH";
// The load resistance on the board
//#define RLOAD 22.0
// Calibration resistance at atmospheric CO2 level
//#define RZERO 879.13
MQ135 gasSensor = MQ135(34);
int val;
int sensorPin = 34;
int sensorValue = 0;
void setup() {
pinMode(sensorPin, INPUT);
// put your setup code here, to run once:
Serial.begin(115200);
WiFi.begin(ssid, pass);
while(WiFi.status() != WL_CONNECTED)
{
delay(200);
Serial.print("..");
}
Serial.println();
Serial.println("NodeMCU is connected!");
Serial.println(WiFi.localIP());
dht.begin();
ThingSpeak.begin(client);
}
void loop() {
// put your main code here, to run repeatedly:
float h = dht.readHumidity();
float t = dht.readTemperature();
val = analogRead(34);
Serial.print ("raw = ");
Serial.println (val);
float zero = gasSensor.getRZero();
Serial.print ("rzero: ");
Serial.println (zero);
float ppm = gasSensor.getPPM();
Serial.print ("ppm: ");
Serial.println (ppm);
Serial.println("raw: " + (String) val);
Serial.println("Rzero: " + (String) zero);
Serial.println("PPM: " + (String) ppm);
ThingSpeak.writeField(myChannelNumber, 1, val, myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber, 2, zero, myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber, 3, ppm, myWriteAPIKey);
Serial.println("Temperature: " + (String) t);
Serial.println("Humidity: " + (String) h);
ThingSpeak.writeField(myChannelNumber, 4, t, myWriteAPIKey);
ThingSpeak.writeField(myChannelNumber, 5, h, myWriteAPIKey);
delay(100);
}


============================================================


HTML FORM


<!DOCTYPE html>
<html>
<head>
<h1 style="background-color:DodgerBlue;">IoT Domain</h1>
</head>
<body>
<p style="background-color:Tomato;">
<OL>
<LI> Enter your Name.
<LI> Registration Number.
</OL>
<h4>
<a href="https://projectmark.com/"> Project Mark</a>
</h4>
<form method="post" action="/{{url}}">
<label for="name">First name:</label><br>
<input type="text" id="fname" name="fname"><br>
<label for="reg">Reg No:</label><br>
<input type="text" id="reg" name="reg" ><br><br>
<label for="topic">Project Title:</label><br>
<input type="text" id="topic" name="Project Topic" ><br><br>
<label for="abstract">Abstract:</label><br>
<input type="text" id="abstract" name="Abstract" ><br><br>
<input type="submit" value="Submit">
<input type="reset" value="Reset" >
</form>
</body>
</html>

==================================================================

IMPORTANT:
lab-1:
181107@broker.mqttdashboard.com
https://www.hivemq.com/demos/websocket-client/

APP_PASSWORDxxjf soqg wiov zzfp

